#!/bin/sh -x

OURDIR=/root/safedns/update
cd $OURDIR

/bin/cp $OURDIR/malwaredomains $OURDIR/malwaredomains.prev

# Download site list from Malware Domains

wget http://www.malwaredomains.com/files/justdomains
/bin/cp $OURDIR/justdomains $OURDIR/domainlist

# Download Zeus Tracker list

wget --no-check-certificate \
	https://zeustracker.abuse.ch/blocklist.php?download=domainblocklist
cat $OURDIR/blocklist.php\?download\=domainblocklist >> $OURDIR/domainlist

# Add internally-defined list of domains to be blacklisted
cat $OURDIR/blacklist.txt >> $OURDIR/domainlist

# Remove school.edu, clean up, and sort
cat $OURDIR/domainlist \
	| grep -iv school.edu \ #-# change school.edu as desired
	| sed '/^$/d' | tr -d '\r' \
	| sort -u > $OURDIR/domains.sorted

# Remove internally-whitelisted list of domains 
/bin/grep -whvf $OURDIR/whitelist.txt \
	$OURDIR/domains.sorted \
	> $OURDIR/malwaredomains

# Make sure malware domain list is complaint with RFCs that define the hostname
# format, and insert them into the MySQL database so BIND can point users
# to the walled garden. See validate_and_load.pl for walled garden IP address.
cat $OURDIR/malwaredomains | $OURDIR/validate_and_load.pl 

# archive files used to build malwaredomains file
LOGDIR=/var/log/named/domains
/bin/mv $LOGDIR/malware-domains.6.tgz $LOGDIR/malware-domains.7.tgz
/bin/mv $LOGDIR/malware-domains.5.tgz $LOGDIR/malware-domains.6.tgz
/bin/mv $LOGDIR/malware-domains.4.tgz $LOGDIR/malware-domains.5.tgz
/bin/mv $LOGDIR/malware-domains.3.tgz $LOGDIR/malware-domains.4.tgz
/bin/mv $LOGDIR/malware-domains.2.tgz $LOGDIR/malware-domains.3.tgz
/bin/mv $LOGDIR/malware-domains.1.tgz $LOGDIR/malware-domains.2.tgz
/bin/mv $LOGDIR/malware-domains.0.tgz $LOGDIR/malware-domains.1.tgz
/bin/tar cvfz $LOGDIR/malware-domains.0.tgz 
	$OURDIR/justdomains* \
	$OURDIR/blocklist.php?download=domainblocklist* \
	$OURDIR/index.html* 

# copy malware domain list to security directory for analysis of FP, FN
/bin/mv $OURDIR/justdomains /home/security/analyze/feeds
/bin/mv $OURDIR/blocklist.php?download=domainblocklist* \
	/home/security/analyze/feeds
grep "<td>" $OURDIR/index.html \
	| sed '/mtc\.sri\.com/d; /.*\..*/!d;' \
	| sed 's/<td>//g; s/<\/td>//g' \
	> /home/security/analyze/feeds/index.html
/bin/rm $OURDIR/index.html

# Now validate_and_load.pl has populated the file dns_table_updated with 
# the _index of the dns_records_index file updated in MySQL, or 0 if we 
# shouldn't reload BIND

TFLAG="`cat $OURDIR/dns_table_updated`"
BINDDIR=/etc/bind

if test $TFLAG = 1; then
  echo "Telling BIND to reload, using config file pointing to dns_records_1"
  cd $BINDDIR
  /bin/rm -f named.conf.options
  /bin/ln -s named.conf.options_1 named.conf.options
  /usr/sbin/rndc reload
fi
if test $TFLAG = 2; then
  echo "Telling BIND to reload, using config file pointing to dns_records_2"
  cd $BINDDIR
  /bin/rm -f named.conf.options
  /bin/ln -s named.conf.options_2 named.conf.options
  /usr/sbin/rndc reload
fi
if test $TFLAG = 0; then
  echo "No new domains to tell BIND about"
fi

