// subnets we wish to allow queries from.  #-#
acl localnet { A.B.C.D/X; }; 

options { 
  directory "/var/cache/bind"; // Working directory 
  version "generic";
  forward only;
  forwarders { 
    A.B.C.D; // #-#
    };
  allow-transfer { none; }; 
  allow-query { localnet; }; 
  allow-query-cache { localnet; }; 
  allow-recursion { localnet; }; 
  }; 

logging {

      channel default_syslog {
            // Send most of the named messages to syslog.
            syslog local2;
            severity info;  
	    // use severity "debug" to see queries being sent to database
            // severity debug;  
      };

      channel audit_log {
            // Send the security related messages to a separate file.
            file "/var/log/named/named.log";
            severity debug;
            print-time yes; 
      };

      channel query_log {
            // Send the security related messages to a separate file.
            file "/var/log/named/query.log";
            severity debug;
            print-time yes; 
      };

      category default { default_syslog; };
      category general { default_syslog; };
      // category security { audit_log; default_syslog; };
      category config { default_syslog; };
      category resolver { audit_log; };
      category xfer-in { audit_log; };
      category xfer-out { audit_log; };
      category notify { audit_log; };
      category client { audit_log; };
      category network { audit_log; };
      category update { audit_log; };
      // category queries { query_log; };
      category lame-servers { audit_log; }; 

};

// Redirect all queries for malware domains to captive portal on this host

dlz "Mysql zone" {
   database "mysql
   {host=127.0.0.1 dbname=malware_domains user=bind pass=xxxxxxxxxx} // #-#
   {select zone from dns_records_1 where zone = '$zone$'}
   {select ttl, type, mx_priority, case when lower(type)='txt' then concat('\"', data, '\"') when lower(type) = 'soa' then concat_ws(' ', data, resp_person, serial, refresh, retry, expire, minimum) else data end from dns_records_1 where zone = '$zone$' and host = '$record$'}";
  };
